INFO  11:05:06,896 - Compiling source file: C:\Users\Laptop\Desktop\pp1\workspace\MJCompiler\test\program.mj
INFO  11:05:06,937 - #2 program
INFO  11:05:06,937 - #45 test302
INFO  11:05:06,937 - #17 namespace
INFO  11:05:06,938 - #45 Addition
INFO  11:05:06,938 - #42 {
INFO  11:05:06,939 - #42 {
INFO  11:05:06,939 - #45 int
INFO  11:05:06,940 - #45 sum
INFO  11:05:06,941 - #38 (
INFO  11:05:06,942 - #45 int
INFO  11:05:06,942 - #45 z
INFO  11:05:06,942 - #36 ,
INFO  11:05:06,943 - #45 int
INFO  11:05:06,943 - #45 d
INFO  11:05:06,944 - #39 )
INFO  11:05:06,945 - #42 {
INFO  11:05:06,946 - #11 return
INFO  11:05:06,946 - #45 z
INFO  11:05:06,947 - #18 +
INFO  11:05:06,949 - #45 d
INFO  11:05:06,950 - #34 ;
INFO  11:05:06,953 - #43 }
INFO  11:05:06,953 - #45 int
INFO  11:05:06,954 - #45 inkrement
INFO  11:05:06,954 - #38 (
INFO  11:05:06,954 - #45 int
INFO  11:05:06,954 - #45 a
INFO  11:05:06,954 - #36 ,
INFO  11:05:06,954 - #45 int
INFO  11:05:06,954 - #45 inc
INFO  11:05:06,954 - #39 )
INFO  11:05:06,955 - #45 int
INFO  11:05:06,955 - #45 pom
INFO  11:05:06,956 - #34 ;
INFO  11:05:06,956 - #45 char
INFO  11:05:06,957 - #45 c
INFO  11:05:06,957 - #34 ;
INFO  11:05:06,957 - #42 {
INFO  11:05:06,957 - #7 if
INFO  11:05:06,958 - #38 (
INFO  11:05:06,958 - #45 inc
INFO  11:05:06,958 - #39 )
INFO  11:05:06,959 - #45 pom
INFO  11:05:06,960 - #31 =
INFO  11:05:06,960 - #48 1
INFO  11:05:06,961 - #34 ;
INFO  11:05:06,961 - #5 else
INFO  11:05:06,961 - #7 if
INFO  11:05:06,961 - #38 (
INFO  11:05:06,961 - #45 inc
INFO  11:05:06,962 - #23 ==
INFO  11:05:06,962 - #48 2
INFO  11:05:06,963 - #39 )
INFO  11:05:06,963 - #45 pom
INFO  11:05:06,963 - #31 =
INFO  11:05:06,963 - #45 sum
INFO  11:05:06,963 - #38 (
INFO  11:05:06,963 - #45 pom
INFO  11:05:06,964 - #36 ,
INFO  11:05:06,964 - #45 c
INFO  11:05:06,964 - #39 )
INFO  11:05:06,965 - #34 ;
INFO  11:05:06,965 - #43 }
INFO  11:05:06,966 - #43 }
INFO  11:05:06,966 - #43 }
INFO  11:05:06,966 - #42 {
INFO  11:05:06,967 - #45 bool
INFO  11:05:06,967 - #45 verify
INFO  11:05:06,967 - #38 (
INFO  11:05:06,967 - #39 )
INFO  11:05:06,968 - #42 {
INFO  11:05:06,968 - #9 print
INFO  11:05:06,968 - #38 (
INFO  11:05:06,968 - #47 v
INFO  11:05:06,968 - #39 )
INFO  11:05:06,969 - #34 ;
INFO  11:05:06,969 - #11 return
INFO  11:05:06,969 - #46 false
INFO  11:05:06,969 - #34 ;
INFO  11:05:06,969 - #43 }
INFO  11:05:06,969 - #12 void
INFO  11:05:06,969 - #45 main
INFO  11:05:06,969 - #38 (
INFO  11:05:06,970 - #39 )
INFO  11:05:06,970 - #42 {
INFO  11:05:06,970 - #43 }
INFO  11:05:06,970 - #43 }
INFO  11:05:06,973 - Obradjuje se funkcija sum na liniji 9
INFO  11:05:06,973 - Dodat je argument funkcije d na liniji 9
INFO  11:05:06,974 - Dodat je argument funkcije z na liniji 9
INFO  11:05:06,974 - Obradjuje se funkcija inkrement na liniji 15
INFO  11:05:06,974 - Dodat je argument funkcije inc na liniji 15
INFO  11:05:06,975 - Dodat je argument funkcije a na liniji 15
INFO  11:05:06,975 - Deklarisana lokalna promenljiva pom na liniji 16
INFO  11:05:06,975 - Deklarisana lokalna promenljiva c na liniji 17
ERROR 11:05:06,975 - Greska na liniji 22 :tipovi stvarnih i formalnih parametara se razlikuju! na liniji 22
ERROR 11:05:06,975 - Greska na liniji 4Uslovni izraz mora biti tipa bool! 
ERROR 11:05:06,975 - Semanticka greska na liniji 15: funkcija Addition::inkrement nema return iskaz!
INFO  11:05:06,975 - Obradjuje se funkcija verify na liniji 35
INFO  11:05:06,975 - Obradjuje se funkcija main na liniji 40
INFO  11:05:06,977 - Program(
  Progname(
   test302
  ) [Progname]
  NmespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Addition
      ) [NamespaceName]
      NoDeclList(
      ) [NoDeclList]
      MthList(
        MthList(
          NoMethList(
          ) [NoMethList]
          MethodDecl(
            MethodName(
              TypeListType(
                Type(
                 int
                  NoIdenL(
                  ) [NoIdenL]
                ) [Type]
              ) [TypeListType]
             sum
            ) [MethodName]
            FormLst(
              FormParam(
                Type(
                 int
                  NoIdenL(
                  ) [NoIdenL]
                ) [Type]
               z
                NoBrackets(
                ) [NoBrackets]
                FrmL(
                  NoFormL(
                  ) [NoFormL]
                  FormLiKK(
                    Type(
                     int
                      NoIdenL(
                      ) [NoIdenL]
                    ) [Type]
                   d
                    NoBrackets(
                    ) [NoBrackets]
                  ) [FormLiKK]
                ) [FrmL]
              ) [FormParam]
            ) [FormLst]
            NoVarDeclList(
            ) [NoVarDeclList]
            StatL(
              NoStateL(
              ) [NoStateL]
              StatementReturn(
                ExprLi(
                  Expr(
                    NoMinOpt(
                    ) [NoMinOpt]
                    TermList(
                      SingleTerm(
                        Term(
                          NoMulopFOpt(
                            Factor1(
                              Designator(
                               z
                                NoIdenL(
                                ) [NoIdenL]
                                NoDesigRep(
                                ) [NoDesigRep]
                              ) [Designator]
                              NoFactOpt1(
                              ) [NoFactOpt1]
                            ) [Factor1]
                          ) [NoMulopFOpt]
                        ) [Term]
                      ) [SingleTerm]
                      AddopP(
                      ) [AddopP]
                      Term(
                        NoMulopFOpt(
                          Factor1(
                            Designator(
                             d
                              NoIdenL(
                              ) [NoIdenL]
                              NoDesigRep(
                              ) [NoDesigRep]
                            ) [Designator]
                            NoFactOpt1(
                            ) [NoFactOpt1]
                          ) [Factor1]
                        ) [NoMulopFOpt]
                      ) [Term]
                    ) [TermList]
                  ) [Expr]
                ) [ExprLi]
              ) [StatementReturn]
            ) [StatL]
          ) [MethodDecl]
        ) [MthList]
        MethodDecl(
          MethodName(
            TypeListType(
              Type(
               int
                NoIdenL(
                ) [NoIdenL]
              ) [Type]
            ) [TypeListType]
           inkrement
          ) [MethodName]
          FormLst(
            FormParam(
              Type(
               int
                NoIdenL(
                ) [NoIdenL]
              ) [Type]
             a
              NoBrackets(
              ) [NoBrackets]
              FrmL(
                NoFormL(
                ) [NoFormL]
                FormLiKK(
                  Type(
                   int
                    NoIdenL(
                    ) [NoIdenL]
                  ) [Type]
                 inc
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormLiKK]
              ) [FrmL]
            ) [FormParam]
          ) [FormLst]
          VarDeclLst(
            VarDeclLst(
              NoVarDeclList(
              ) [NoVarDeclList]
              VarD(
                VarType(
                  Type(
                   int
                    NoIdenL(
                    ) [NoIdenL]
                  ) [Type]
                ) [VarType]
               pom
                NoBrackets(
                ) [NoBrackets]
                NoVarDList(
                ) [NoVarDList]
              ) [VarD]
            ) [VarDeclLst]
            VarD(
              VarType(
                Type(
                 char
                  NoIdenL(
                  ) [NoIdenL]
                ) [Type]
              ) [VarType]
             c
              NoBrackets(
              ) [NoBrackets]
              NoVarDList(
              ) [NoVarDList]
            ) [VarD]
          ) [VarDeclLst]
          StatL(
            NoStateL(
            ) [NoStateL]
            StatementIF(
              Conditioncond(
                CondTerm(
                  RelOptNo(
                    Expr(
                      NoMinOpt(
                      ) [NoMinOpt]
                      SingleTerm(
                        Term(
                          NoMulopFOpt(
                            Factor1(
                              Designator(
                               inc
                                NoIdenL(
                                ) [NoIdenL]
                                NoDesigRep(
                                ) [NoDesigRep]
                              ) [Designator]
                              NoFactOpt1(
                              ) [NoFactOpt1]
                            ) [Factor1]
                          ) [NoMulopFOpt]
                        ) [Term]
                      ) [SingleTerm]
                    ) [Expr]
                  ) [RelOptNo]
                  CondFactANo(
                  ) [CondFactANo]
                ) [CondTerm]
                CondTONo(
                ) [CondTONo]
              ) [Conditioncond]
              StatementDesignatorStatement(
                StatementEquals(
                  DesignatorStatement1(
                    Designator(
                     pom
                      NoIdenL(
                      ) [NoIdenL]
                      NoDesigRep(
                      ) [NoDesigRep]
                    ) [Designator]
                    DSChoose1(
                      AssignopEq(
                      ) [AssignopEq]
                      Expr(
                        NoMinOpt(
                        ) [NoMinOpt]
                        SingleTerm(
                          Term(
                            NoMulopFOpt(
                              Factor2(
                               1
                              ) [Factor2]
                            ) [NoMulopFOpt]
                          ) [Term]
                        ) [SingleTerm]
                      ) [Expr]
                    ) [DSChoose1]
                  ) [DesignatorStatement1]
                ) [StatementEquals]
              ) [StatementDesignatorStatement]
              ElseLi(
                StatementIF(
                  Conditioncond(
                    CondTerm(
                      CondFactrelop(
                        Expr(
                          NoMinOpt(
                          ) [NoMinOpt]
                          SingleTerm(
                            Term(
                              NoMulopFOpt(
                                Factor1(
                                  Designator(
                                   inc
                                    NoIdenL(
                                    ) [NoIdenL]
                                    NoDesigRep(
                                    ) [NoDesigRep]
                                  ) [Designator]
                                  NoFactOpt1(
                                  ) [NoFactOpt1]
                                ) [Factor1]
                              ) [NoMulopFOpt]
                            ) [Term]
                          ) [SingleTerm]
                        ) [Expr]
                        RelopEE(
                        ) [RelopEE]
                        Expr(
                          NoMinOpt(
                          ) [NoMinOpt]
                          SingleTerm(
                            Term(
                              NoMulopFOpt(
                                Factor2(
                                 2
                                ) [Factor2]
                              ) [NoMulopFOpt]
                            ) [Term]
                          ) [SingleTerm]
                        ) [Expr]
                      ) [CondFactrelop]
                      CondFactANo(
                      ) [CondFactANo]
                    ) [CondTerm]
                    CondTONo(
                    ) [CondTONo]
                  ) [Conditioncond]
                  StatementDesignatorStatement(
                    StatementEquals(
                      DesignatorStatement1(
                        Designator(
                         pom
                          NoIdenL(
                          ) [NoIdenL]
                          NoDesigRep(
                          ) [NoDesigRep]
                        ) [Designator]
                        DSChoose1(
                          AssignopEq(
                          ) [AssignopEq]
                          Expr(
                            NoMinOpt(
                            ) [NoMinOpt]
                            SingleTerm(
                              Term(
                                NoMulopFOpt(
                                  Factor1(
                                    Designator(
                                     sum
                                      NoIdenL(
                                      ) [NoIdenL]
                                      NoDesigRep(
                                      ) [NoDesigRep]
                                    ) [Designator]
                                    FactOpt1Yes(
                                      APmaybeYes(
                                        ActPars(
                                          ExprCommaexpr(
                                            NoExprCommaexpr(
                                              Expr(
                                                NoMinOpt(
                                                ) [NoMinOpt]
                                                SingleTerm(
                                                  Term(
                                                    NoMulopFOpt(
                                                      Factor1(
                                                        Designator(
                                                         pom
                                                          NoIdenL(
                                                          ) [NoIdenL]
                                                          NoDesigRep(
                                                          ) [NoDesigRep]
                                                        ) [Designator]
                                                        NoFactOpt1(
                                                        ) [NoFactOpt1]
                                                      ) [Factor1]
                                                    ) [NoMulopFOpt]
                                                  ) [Term]
                                                ) [SingleTerm]
                                              ) [Expr]
                                            ) [NoExprCommaexpr]
                                            Expr(
                                              NoMinOpt(
                                              ) [NoMinOpt]
                                              SingleTerm(
                                                Term(
                                                  NoMulopFOpt(
                                                    Factor1(
                                                      Designator(
                                                       c
                                                        NoIdenL(
                                                        ) [NoIdenL]
                                                        NoDesigRep(
                                                        ) [NoDesigRep]
                                                      ) [Designator]
                                                      NoFactOpt1(
                                                      ) [NoFactOpt1]
                                                    ) [Factor1]
                                                  ) [NoMulopFOpt]
                                                ) [Term]
                                              ) [SingleTerm]
                                            ) [Expr]
                                          ) [ExprCommaexpr]
                                        ) [ActPars]
                                      ) [APmaybeYes]
                                    ) [FactOpt1Yes]
                                  ) [Factor1]
                                ) [NoMulopFOpt]
                              ) [Term]
                            ) [SingleTerm]
                          ) [Expr]
                        ) [DSChoose1]
                      ) [DesignatorStatement1]
                    ) [StatementEquals]
                  ) [StatementDesignatorStatement]
                  NoElseL(
                  ) [NoElseL]
                ) [StatementIF]
              ) [ElseLi]
            ) [StatementIF]
          ) [StatL]
        ) [MethodDecl]
      ) [MthList]
    ) [Namespace]
  ) [NmespaceList]
  NoDeclList(
  ) [NoDeclList]
  MthList(
    MthList(
      NoMethList(
      ) [NoMethList]
      MethodDecl(
        MethodName(
          TypeListType(
            Type(
             bool
              NoIdenL(
              ) [NoIdenL]
            ) [Type]
          ) [TypeListType]
         verify
        ) [MethodName]
        NoFormList(
        ) [NoFormList]
        NoVarDeclList(
        ) [NoVarDeclList]
        StatL(
          StatL(
            NoStateL(
            ) [NoStateL]
            StatementPrint(
              Expr(
                NoMinOpt(
                ) [NoMinOpt]
                SingleTerm(
                  Term(
                    NoMulopFOpt(
                      Factor3(
                       v
                      ) [Factor3]
                    ) [NoMulopFOpt]
                  ) [Term]
                ) [SingleTerm]
              ) [Expr]
              NoNN(
              ) [NoNN]
            ) [StatementPrint]
          ) [StatL]
          StatementReturn(
            ExprLi(
              Expr(
                NoMinOpt(
                ) [NoMinOpt]
                SingleTerm(
                  Term(
                    NoMulopFOpt(
                      Factor4(
                       false
                      ) [Factor4]
                    ) [NoMulopFOpt]
                  ) [Term]
                ) [SingleTerm]
              ) [Expr]
            ) [ExprLi]
          ) [StatementReturn]
        ) [StatL]
      ) [MethodDecl]
    ) [MthList]
    MethodDecl(
      MethodName(
        TypeListVoid(
        ) [TypeListVoid]
       main
      ) [MethodName]
      NoFormList(
      ) [NoFormList]
      NoVarDeclList(
      ) [NoVarDeclList]
      NoStateL(
      ) [NoStateL]
    ) [MethodDecl]
  ) [MthList]
) [Program]
INFO  11:05:06,977 - ===================================
